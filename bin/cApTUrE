#!/usr/bin/env perl
use strict;
use warnings;
use v5.10;
use FindBin;
use lib "$FindBin::Bin/../lib";
use DuctTape;
use Getopt::Long;
use Carp;

my $usage = "

Synopsis:
    ./cApTUrE --config file.cfg --interval_list file.list > command_review.txt 
    ./cApTUrE --config file.cfg --interval_list file.list --run
    ./cApTUrE --config file.cfg --file sorted_bams.list --run
    ./cApTUrE --error_check
    ./cApTUrE --clean

Description:

    cApTUrE:  vAriant collecTing UGP pipeline version: 1.2.1

    cApTUrE is a NGS pipeline written in Perl, created for the
    Utah Genome Project (UGP) http://weatherby.genetics.utah.edu/UGP/wiki/index.php/Main_Page

    Currently it incorporates the following tools:
    -FastQC
    -BWA
    -SamTools
    -Picard 1.127 (broadinstitute version)
    -GATK 3.0

    This version of cApTUrE is now updated to work with version 3.0+ of GATK.

Required options:

    -cfg, --config          UGP configuration file.

    -il, --interval_list    Region list file for GATK variant calling. [Example: 1:10929-11532]

Additional options:

    -f, --file              Will take file list as input if beginning cApTUrE with previously
                            collected files.  File must match previous step cApTUrE would have ran.

    -r, --run               Will take given command stack and run commands.
                            When this option off a display of commands will piped to STDOUT.

    -ec, --error_check      Run quick check of log files for run errors.

    -sc, --split_combine    If more then 200 GVCF files were created (HaplotypeCaller), 
                            split to run multiple CombineGVCF commands [DEFAULT 100].
                            ** Smaller number creates more command to run. **

    -jpn, --job_per_node	When useing cluster environment, specifies number of jobs to add to each pbs script.

    -pbs, --pbs_template	Specifies path to pbs template file to use.

    -c, --clean 	        Will clean up all log, data, pbs, index and report files.

    -lp, --log_path	        Path to right log file too, helpful with multi-runs per machine.  [DEFAULT current]

    -ql, --qstat_limit      Limit to the number of qstat jobs to launch at one time. [DEFAULT 10]

    -h, --help	            Print this usage statement.

\n";

my %c_opts = ();
GetOptions(
    \%c_opts,              "config|cfg=s",
    "run|r",               "interval_list|il=s",
    "engine|e=s",          "clean|c",
    "error_check|ec",      "file|f=s",
    "jobs_per_node|jpn=i", "pbs_template|pbs=s",
    "split_combine|sc=i",  "help|h",
    "log_path|lp=s", "qstat_limit|ql=i"
);
croak $usage if $c_opts{help};

# set up commandline defaults.
if ( $c_opts{clean} ) {
    `rm -rf *.log* CMD_stack.store *.pbs* launch.index cmd_tmp pbs_tmp`;
    exit(0);
}

if ( $c_opts{error_check} ) {
    system("grep -i 'error' *.log-*");
    system("grep -i 'exceptions' *.log-*");
    exit(0);
}
croak "Required options not met\n$usage" unless ( $c_opts{interval_list} and $c_opts{config} );

# Clean up and default setting.
$c_opts{engine} //= 'MCE';
if ( $c_opts{file} and -e 'CMD_stack.store' ) { `rm CMD_stack.store` }

my $t = DuctTape->new( commandline => \%c_opts, );

$t->wrap;

