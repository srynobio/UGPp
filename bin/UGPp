#!/usr/bin/env perl
use strict;
use warnings;
use v5.10;
use FindBin;
use lib "$FindBin::Bin/../lib";
use UGP;
use Getopt::Long;
use Carp;

my $usage = << "EOU";

Synopsis:
    ./UGPp -cfg <file.cfg> -il <interval_file> > command_review.txt
    ./UGPp -cfg <file.cfg> -il <interval_file> --run
    ./UGPp -cfg <file.cfg> -il <interval_file> -f <file_list> --run
    ./UGPp -ec
    ./UGPp -c

Description:

    UGPp: FastQforward implementation of UGP pipeline version: 0.0.1

    UGPp is a NGS pipeline created for the 
    Utah Genome Project (UGP) and The Utah Center for Genetic Discovery (UCGD)

    Additional Protocol documentation here: http://weatherby.genetics.utah.edu/UGP/wiki/index.php/UGP_Variant_Protocol


Required options:

    --config, -cfg          UGPp configuration file.

    --interval_list, -il    Region list file for GATK genotyping. [Example: 1:10929-11532]

Additional options:
    --engine, -e            Which engine to use: server or cluster. [DEFAULT server].

    --file, -f              List of files (including path) from which to start UGPp.
                            File must match previous step UGPp would have ran.

    --run, -r               Will run the UGPp pipeline.
                            When this option is off a display of commands will be piped to STDOUT.

    --error_check, -ec      Run quick check of log files for run errors.

    --clean, -c             Will clean up all log, data, slurm, index and report files.

    --qstat_limit, -ql      Limit to the number of qstat jobs to launch at one time. [DEFAULT 10]

    --help, -h              Print this usage statement.

EOU

my %c_opts = ();
GetOptions(
    \%c_opts,              "config|cfg=s",
    "run|r",               "interval_list|il=s",
    "engine|e=s",          "clean|c",
    "error_check|ec",      "file|f=s",
    "jobs_per_node|jpn=i", "slurm_template|slurm=s",
    "help|h",              "qstat_limit|ql=i",
    "individuals|i",
);
croak $usage if $c_opts{help};

# set up commandline defaults.
if ( $c_opts{clean} ) {
    `rm -rf *.log* CMD_stack.store *sbatch *.out launch.index cmd_tmp slurm_tmp`;
    exit(0);
}

if ( $c_opts{error_check} ) {
    system("grep --exclude=\"UGPp\" -i 'error' *");
    system("grep -i 'exceptions' *.log-*");
    system("grep -i 'failed' *.log-*");
    exit(0);
}
croak "Required options not met\n$usage" unless ( $c_opts{interval_list} and $c_opts{config} );

# Clean up and default setting.
$c_opts{engine} //= 'server';
if ( $c_opts{file} and -e 'CMD_stack.store' ) { `rm CMD_stack.store` }

my $ugpp = UGP->new( commandline => \%c_opts, );

$ugpp->pipeline;
